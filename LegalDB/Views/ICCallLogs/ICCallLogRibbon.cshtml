
@using LegalDB
@model IEnumerable<LegalDB.Models.ICCallLog>

@{
    ViewBag.Title = "Ribbon";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Ribbon</h2>
<div id="ControlRegion">
    @using Syncfusion.JavaScript.Models;
    <div id="ControlRegion">
        @using Syncfusion.JavaScript.Models;
        @(Html.EJ().Ribbon("defaultRibbon").Width("1000px").ApplicationTab(apptab =>
    {
        apptab.Type(ApplicationTabType.Menu).MenuItemID("menurib").MenuSettings(new MenuProperties()
            {
                OpenOnClick = false
            });
    })
                //@(Html.EJ().Ribbon("defaultRibbon")
                // .Width("1000px")
                // .ApplicationTab(apptab =>
                //{
                //    apptab.Type(ApplicationTabType.Menu).MenuItemID("menurib").MenuSettings(new MenuProperties()
                //           {
                //               OpenOnClick = false
                //           });
                //})
    .RibbonTabs(tab =>
    {
        tab.Id("CallMngr").Text("Call Manager").TabGroups(tabgrp =>
        {
            tabgrp.Text("Activity").AlignType(RibbonAlignType.Rows).Content(cnt =>
            {
                cnt.ContentGroups(cntgrp =>
                {
                    cntgrp.Id("CallMgr").Text("CallMgr").ToolTip("Phone Call Manager").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        ImagePosition = ImagePosition.ImageTop,
                        PrefixIcon = "e-callmgr",
                        Click = "executeAction"
                    }).Add();
                    cntgrp.Id("Tickler").Text("Reminder").ToolTip("Call Back Reminder").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        ImagePosition = ImagePosition.ImageTop,
                        PrefixIcon = "e-Tickler",
                        Click = "executeAction"
                    }).Add();
                    cntgrp.Id("ICDetail").Text("IC Detail").ToolTip("IC Detail").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        ImagePosition = ImagePosition.ImageTop,
                        PrefixIcon = "e-Detail",
                        Click = "executeAction"
                    }).Add();
                }).ContentDefaults(df => df.Type(RibbonButtonType.Button).Width("90px").Height("70px")).Add();
            }).Add();
            tabgrp.Text("Reports").AlignType(RibbonAlignType.Rows).Content(cnt =>
            {
                cnt.ContentGroups(cntgrp =>
                {
                    cntgrp.Id("CallASum").Text("Summary").ToolTip("Call Activity Summary").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        ImagePosition = ImagePosition.ImageTop,
                        PrefixIcon = "e-RptASum",
                        Click = "executeAction"
                    }).Add();
                    cntgrp.Id("CallADet").Text("Detail").ToolTip("Call Activity Detail").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        ImagePosition = ImagePosition.ImageTop,
                        PrefixIcon = "e-RptADet",
                        Click = "executeAction"
                    }).Add();
                    cntgrp.Id("UnivSum").Text("Universal").ToolTip("Universal Summary").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        ImagePosition = ImagePosition.ImageTop,
                        PrefixIcon = "e-RptUSum",
                        Click = "executeAction"
                    }).Add();
                }).ContentDefaults(df => df.Type(RibbonButtonType.Button).Width("90px").Height("70px")).Add();
            }).Add();
            tabgrp.Text("").AlignType(RibbonAlignType.Columns).Content(cnt =>
            {
                cnt.ContentGroups(cntgrp =>
                {
                    cntgrp.Id("cut").Text("Call Log Per Day").ToolTip("Call Log Per Day").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        PrefixIcon = "e-icon e-ribbon e-datetime",
                        Click = "executeAction"
                    }).Add();
                    cntgrp.Id("copy").Text("Call Log Range   ").ToolTip("Call Log Date Range").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        PrefixIcon = "e-icon e-ribbon e-calender",
                        Click = "executeAction"
                    }).Add();
                    cntgrp.Id("clear").Text("Clear                    ").ToolTip("Clear All").ButtonSettings(new ButtonProperties()
                    {
                        ContentType = ContentType.TextAndImage,
                        PrefixIcon = "e-icon e-ribbon clearAll",
                        Click = "executeAction"
                    }).Add();
                }).ContentDefaults(df => df.Type(RibbonButtonType.Button).Width("150px").Height("20px")).Add();
            }).Add();
        }).Add();
        tab.Id("display").Text("Display").TabGroups(tabgrp =>
        {
            tabgrp.Text("View").Type("custom").ContentID("view").Add();
            tabgrp.Text("Windows").Type("custom").ContentID("windows").Add();
        }).Add();
    })
        .ClientSideEvents(evt => evt.Create("createControl"))
        )
        @*<div class="container body-content">
                @RenderBody()
            </div>*@

        <div id="contenteditor" class="e-contenteditor" contenteditable="true" spellcheck="false">
            <p>Integer dui elit, cursus vel metus maximus, dictum semper magna. Donec volutpat porta gravida. Fusce dapibus cursus tellus et pulvinar. Fusce porta dolor eget consectetur ultricies.</p>
            <p>Cras et quam scelerisque, blandit lorem a, tristique velit. Quisque sagittis sapien augue. Quisque tincidunt sit amet libero sed luctus.</p>
        </div>
        <ul id="menurib">
            <li>
                <a>FILE</a>
                <ul>
                    <li><a>New</a></li>
                    <li><a>Open</a></li>
                    <li><a>Save</a></li>
                    <li><a>Save As</a></li>
                    <li><a>Print</a></li>
                </ul>
            </li>
        </ul>
        @*<div id="contenteditor" class="e-contenteditor" contenteditable="true" spellcheck="false">
                </div>
            <ul id="menurib">
                <li><a>FILE</a>
                    <ul>
                        <li><a>New</a></li>
                        <li><a>Open</a></li>
                        <li><a>Save</a></li>
                        <li><a>Save As</a></li>
                        <li><a>Print</a></li>
                    </ul>
                </li>
            </ul>*@
        @*<ul id="pasteSplit">
                <li><a>Paste</a></li>
             </ul>

            <input id="fontcolor"/>
            <input id="fillcolor"/>**@
        <table id="view" class="e-designtablestyle">
            <tr>
                <td><input type="checkbox" id="check1" checked="checked" /><label for="check1">Toolbar</label></td>
            </tr>
            <tr>
                <td><input type="checkbox" id="check2" checked="checked" /><label for="check4">Status Bar</label></td>
            </tr>
        </table>
        <table id="windows" class="e-designtablestyle">
            <tr>
                <td>
                    @Html.EJ().RadioButton("Radio1").Name("rad1").Size(RadioButtonSize.Small).Checked(true).Enabled(true)<!--Creates a small Radio Button-->
                    @*<input type="button" id="button1" />*@
                    <label for="Radio1">New Window</label>
                </td>
                <td>
                    @Html.EJ().RadioButton("Radio2").Name("rad1").Size(RadioButtonSize.Small).Checked(false).Enabled(true)<!--Creates a small Radio Button-->
                    @*<input type="button" id="button2" />*@
                    <label for="Radio2">Tile Horizontal</label>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.EJ().RadioButton("Radio3").Name("rad1").Size(RadioButtonSize.Small).Checked(false).Enabled(true)<!--Creates a small Radio Button-->
                    @*<input type="button" id="button3" />*@
                    <label for="Radio3">Cascade</label>
                </td>
                <td>
                    @Html.EJ().RadioButton("Radio4").Name("rad1").Size(RadioButtonSize.Small).Checked(false).Enabled(true)<!--Creates a small Radio Button-->
                    @*<input type="button" id="button4" />*@
                    <label for="Radio4">Close All</label>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.EJ().RadioButton("Radio5").Name("rad1").Size(RadioButtonSize.Small).Checked(false).Enabled(true)<!--Creates a small Radio Button-->
                    @*<input type="button" id="button5" />*@
                    <label for="Radio5">Tile Vertical</label>
                </td>
                <td>
                    @Html.EJ().RadioButton("Radio6").Name("rad1").Size(RadioButtonSize.Small).Checked(false).Enabled(true)<!--Creates a small Radio Button-->
                    @*<input type="button" id="button6" />*@
                    <label for="Radio6">Arange Icons</label>
                </td>
            </tr>
        </table>


        <script>
            var fontfamily = ["Segoe UI", "Arial", "Times New Roman", "Tahoma", "Helvetica"], fontsize = ["1pt", "2pt", "3pt", "4pt", "5pt"], action1 = ["New", "Clear"], action2 = ["Bold", "Italic", "Underline", "strikethrough", "superscript", "subscript"];
            function executeAction(args) {
                var val, prop = args.text;
                val = (ej.isNullOrUndefined(args.model.text)) ? args.model.activeText : args.model.text;
                if (action1.indexOf(val) != -1)
                    $("#contenteditor").empty();
                else if (action2.indexOf(val) != -1)
                    document.execCommand(val, false, null);
                else if (fontfamily.indexOf(prop) != -1)
                    document.execCommand("FontName", false, prop);
                else if (fontsize.indexOf(prop) != -1)
                    document.execCommand("FontSize", false, prop.replace("pt", ""));
                else
                    $("#contenteditor").append("<p> Action: " + val + " Triggered </p>");
            }
            function createControl(args) {
                var ribbon = $("#defaultRibbon").data("ejRibbon");
                $("#fontcolor").ejColorPicker({ value: "#FFFF00", modelType: "palette", cssClass: "e-ribbon", toolIcon: "e-fontcoloricon", select: "colorHandler" });
                $("#fillcolor").ejColorPicker({ value: "#FF0000", modelType: "palette", cssClass: "e-ribbon", toolIcon: "e-fillcoloricon", select: "colorHandler" });
            }
            function colorHandler(args) {
                (this._id.indexOf("fillcolor") != -1) ? $("#contenteditor").css('background-color', args.value) : document.execCommand('forecolor', false, args.value);
            }
        </script>
        <script type="text/javascript">
            function DisableButton() {
                //Code disables the Button.
                $find("UnivSum").Disable();
            }
            function EnableButton() {
                //Code enables the Button.
                $find("myButton").Enable();
            }
        </script>


        <link href="@Url.Content("~/Content/ej/web/ribbon-css/ej.icons.css")" rel="stylesheet" />
        <style>
            .e-contenteditor {
                width: 600px;
                height: 220px;
                border: 1px solid #D9DFDE;
                border-top: 0;
                overflow: auto;
                background-color: white;
            }

                .e-contenteditor p {
                    margin: 20px;
                }

            .e-ribbon .e-header .e-tab:not(.e-active) a:hover {
                background: #FFF;
            }

            .e-callmgr {
                background-image: url('../images/office48x48.png');
                background-repeat: no-repeat;
                height: 44px;
                width: 64px;
            }

            .e-Tickler {
                background-image: url('../images/phone_icon_48x48.png');
                background-repeat: no-repeat;
                height: 44px;
                width: 64px;
            }

            .e-Detail {
                background-image: url('../images/app_cascade48x48.png');
                background-repeat: no-repeat;
                height: 44px;
                width: 64px;
            }

            .e-RptASum {
                background-image: url('../images/activity_monitor.png');
                background-repeat: no-repeat;
                height: 44px;
                width: 64px;
            }

            .e-RptADet {
                background-image: url('../images/activity_window.png');
                background-repeat: no-repeat;
                height: 44px;
                width: 64px;
            }

            .e-RptUSum {
                background-image: url('../images/reports.png');
                background-repeat: no-repeat;
                height: 44px;
                width: 64px;
            }

            .e-RptCLDay {
                background-image: url('../images//Calendar16x16.png');
                background-repeat: no-repeat;
                height: 44px;
                width: 100px;
            }

            .e-RptCLRangm {
                background-image: url('../images/calendar_Week.png');
                background-repeat: no-repeat;
                height: 44px;
                width: 100px;
            }

            .e-extracontent .e-extrabtnstyle {
                padding-left: 28px;
                text-align: left;
            }
        </style>
    </div>
</div>
